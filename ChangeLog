2003-03-25  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_url.c (bk_url_parse): distinguish scheme:/// from scheme:/
	(bk_url_reconstruct): better handling for non-generic URLs

	* include/libbk.h (BK_RUN_HANDLE_TIME): flag for handlers to get time
	add flags to bk_run_{poll,idle,on_demand}_add

	* lib/b_run.c (bk_run_once): only select, gettimeofday if absolutely
	needed [requires BK_RUN_HANDLE_TIME for non-eventq handlers; not one of
	which actually used the timestamp passed in]
	(bk_run_checkeventq): gettimeofday if needed, return to bk_run_once

2003-03-24  Seth Robertson  <seth@hawking.sysdetect.com>

	* lib/b_stats.c: New support routines to track timing of whatever
	you like

2003-03-21  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_url.c (bk_url_reconstruct): James' idea of a "valid" URL 
	isn't quite the same as that of pcap or mailto.
	
2003-03-20  Seth Robertson  <seth@startide.sysdetect.com>

	* xml/b_search.c (bkxml_attrnode_data): Restore AWB default of
	missing text being empty string, not null.

2003-03-19  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_error.c (bk_error_irepeater_flush): Make sure error
	aggregation messages get added to the error queues.

	* test/test_errorstuff.c (progrun): Call bk_error_repeater_flush
	before bk_error_dump (here and other test programs).

2003-03-19  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_fileutils.c (bk_slurp): Enable slurped files to be null
	terminated if you will be treating them like strings.

2003-03-18  Seth Robertson  <seth@startide.sysdetect.com>

	* xml/b_search.c: libbkxml for non-awb-specific XML routines
	(licensing needed them and licensing is not AWB specific).
	These should be used preferrentially over a_xml.
	
2003-03-17  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_time.c (bk_time_iso_format): Add copy out flag to indicate
	that too little space was passed in.

2003-03-14  Seth Robertson  <seth@winwood.sysdetect.com>

	* lib/b_fileutils.c (bk_slurp): Add routines to slurp files.

2003-03-13  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_url.c (bk_url_reconstruct): Function to reconstruct a
	valid url string from its parsed components.

2003-03-07  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_run.c (bk_run_event_comparator): Priority queues want
	*BOOLEAN* *NOT* tri-state comparators.

	* lib/b_ioh.c (bk_ioh_init): Initialization for follow mode.
	(ioh_runhandler): Check if we run out of data in follow mode.
	(check_follow): Function to determine (when in follow mode)
	whether we need to wait for new data or to proceed if new data
	have arrived.

2003-03-07  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_bnbio.c (bk_iohh_bnbio_read): If we've timed out but
	miraculously found some data at the last instant, do not count the
	round as a timeout.

2003-02-28  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_strcode.c (bk_string_str2xml): Allocate enough memory to
	hold the result so that we don't dump core.

	* lib/b_error.c (be_error_append): Prevent garbage after error
	message by zeroing memory first.

	* lib/b_strconv.c (bk_string_atot): Added bk_string_atot.

2003-02-23  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_string.c (bk_string_unique_string): Avoid placing EOS
	marker in middle of string (snprintf(3) *guarentees* an EOS at the
	end).

2003-02-22  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_error.c (bk_error_iprintbuf): Don't go through
	error_printf for two reasons: eliminate memory size constraint,
	eliminate possibility for printf char interpolation.

2003-02-13  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* include/libbk.h: Added BK_MIN and MK_MAX.

2003-02-11  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_memx.c (bk_memx_addstr): Wrapper around bk_memx_get to
	handle the common(?) case where you want to have an infinately
	expandable string which keeps getting appended to.

	* lib/b_md5.c (bk_MD5_extract_printable): Make sure that extracted
	string is in fact null terminated

2003-02-05  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* include/libbk.h: Added bk_bitfield and bk_timespec.

2003-02-02  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_listnum.c (bk_listnum_next): Remove pointer from CLC
	*before* freeing (wild pointer reference -- not really, but this
	is more correct and shuts up insight).

2003-01-31  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bsre_create): Add reference cnt to string
	registry to avoid overfreeing (created wild pointers).

	* include/libbk_oscompat.h (BK_FINISH_FUN): Insure no longer
	chokes on __contructor__ attribute.

	* include/libbk.h (realloc): Redefine realloc() when INSURE is on,
	otherwise you must deal with a multitude of FREE_NULL "errors".

2003-01-23  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_nvmap.c (bk_nvmap_name2value): Type int values to
	u_int64_t so pointers can be held in nvmaps.

2003-01-21  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_bnbio.c (bk_iohh_bnbio_write): return error status [data eaten]
	(bk_iohh_bnbio_geterr): return error message from ioh errno

	* lib/b_pollio.c (bk_polling_io_unthrottle): unthrottle should be noop
	if bpi isn't already throttled
	
	* lib/b_run.c (bk_run_destroy): fix for ticket #590 double free

2003-01-20  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_exec.c: Update users of tokenization to handle new
	variable expansion arguments

	* lib/b_string.c (bk_string_tokenize_split): Add variable
	expansion (two methods: CLC and environ)

2003-01-09  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_md5.c (bk_MD5Update): Changed inBuf parameter from char *
	to const char *.

	* lib/b_string.c (bk_string_alloc_vsprintf): Added
	bk_string_alloc_vsprintf and changed the implementation of
	bk_string_alloc_sprintf accordingly.

2002-12-30  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_strcode.c (bk_string_str2xml): partial fix for ticket #963:
	always allow whitespace chars, implement entity-encoding correctly,
	and use sizeof rather than strlen
	
2002-12-20  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_fileutils.c: note additional security flaws in this code

2002-11-20  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_NSECTOUSEC, BK_USECTONSEC): avoid overflow,
	perform rounding on nsec->usec conversion

2002-11-20  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_fileutils.c (bk_file_unlock): Change sprintf to snprintf.

2002-11-19  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* include/libbk.h: Add autoconf'd BK-IN6_IS_ADDR_MULTICAST.

2002-11-18  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_last_error): Get the last bkio errno.

2002-11-14  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_fileutils.c (bk_fileutils_is_true_pipe): Added function to
	test whether a file descriptor points at a true pipe.

2002-11-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_ioh.c (bk_ioh_fdctl): implement SO_LINGER correctly

2002-11-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_include.h: defining _XOPEN_SOURCE breaks BSD compile

2002-11-08  Seth Robertson  <seth@hawking.sysdetect.com>

	* lib/b_error.c (bk_error_iprint): Free duplicate messages...

2002-11-07  Seth Robertson  <seth@winwood.sysdetect.com>

	* lib/b_stdfun.c (bk_dmalloc_shutdown): Don't forget to condition
	on dmalloc

	* lib/b_thread.c: Start threading functions--first up thread safe
	addition structures

2002-11-05  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_general.c (bk_general_thread_init): Needs to work even
	without initialization.

2002-11-04  Seth Robertson  <seth@startide.sysdetect.com>
	
	* README.THREADS: Minor updates now that we are starting to do
	this.  Keep list of functions converted so far, for quick
	reference when trying to propagate thread safety.

	* lib/b_string.c (bk_string_unique_string): The deleted code
	before the while loop had no effect--hashed value was not actually
	moved anywhere and there were essentially no sideeffects (other
	than using a random number).  Also, delete hash stuff entirely--
	the rand number is already whitened for your pleasure--no need to
	go through *another* round.  Besides, there was MAJOR stack
	overrun bug (either reading or writing, depending on the value)
	since curlen was set to MAX instead of MIN.  Just say no to
	overcomplicated functions, unless, of course, they are my
	overcomplicated functions :-)

	* lib/b_md5.c: lib/b_string.c: lib/b_memx.c: lib/b_debug.c:
	lib/b_general.c: lib/b_fun.c: Documented and convert to pthreads

	* lib/b_error.c (bk_error_iprint): return after node malloc
	failure leaks memory.  Goto error instead.

	* lib/b_general.c (bk_general_thread_init): Don't bother setting
	function tracing flag--bk_general stuff is shared.  Probably would
	core-dump anyway.

2002-11-06  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_stdwrfun): Add option to write all available
	data on each write (for RAW mode only).

2002-11-05  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: name millisecond timeout parameters msecs, not usec

	* lib/b_bnbio.c (bnbio_set_timeout): document timeout as milliseconds

	* include/libbk_oscompat.h: don't need GMTIME_R_PROTOTYPE, just do it

2002-10-11  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_addrgroup.c (tcp_connect_start): Don't just return error
	on error. Try tcp_connect_start() again. This should have happened
	a long time ago.

2002-10-21  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_net.h (struct baka_udphdr): get the baka order right!

	* lib/b_strconv.c (bk_string_atoull_int): avoid signed char index bug

	* lib/b_strcode.c (bk_decode_base64): avoid signed char index bug

2002-10-18  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: __INSURE__, not insight...

	* include/libbk_net.h: add #defines needed by feature extract plugins

	* include/libbk_include.h: turn off BSD extensions for Insure

	* lib/b_url.c: everybody has strcasecmp, not all declare it

	* lib/b_error.c (bk_error_iprint): J.Brian thinks that omitting -O2
	makes it easier to debug, but he just loses helpful compiler errors
	
2002-10-16  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_error.c (bk_error_iprint): Added rudimentary error
	aggregation.

	* lib/b_general.c (bk_general_syslog): Change format from char* to
	const char*.  Fix missed initialization.

2002-10-16  Seth Robertson  <seth@yeah.baka.org>

	* include/libbk_oscompat.h: Define in_addr_t if needed.

2002-10-14  James Tanis  <jtt@hawking.sysdetect.com>

	* include/libbk_net.h (BAKA_TCPHDR_LENIENT_FLAGMASK): Define this
	more strictly

2002-10-09  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_addrgroup.c (tcp_connect_activity): Also check errno
	against autoconf'ed determined value for subsequent calls to
	connect(2) after the first one (for a given socket) has been
	refused.

2002-10-04  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_run.c (bk_run_once): Do not block in select(2) if an event
	has fired (ie allow timeouts to works their magic).
	(bk_run_checkeventq): Optional copyout to return the number of
	events which have fired in this check.

2002-10-02  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_addrgroup.c (do_net_init_af_inet_udp_listen): Always set
	SO_REUSEADDR when setting to listen on udp.

2002-09-27  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_MAX_SHORT): useless, use USHRT_MAX et al.

	* lib/b_error.c (be_error_append): fix James' bugs while he sleeps

2002-09-27  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_error.c (be_error_append): Don't append NEWLINE if last
	char is already a NEWLINE.

2002-09-26  James Tanis  <jtt@hawking.sysdetect.com>

	* include/libbk.h (BK_MAX_SHORT): Add a few constants, which are
	_likely_ to exist on all archs, but let's be sure. 

2002-09-26  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_run.c (bk_run_enqueue_delta): Fixed small arithmetic error.

2002-09-23  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_bnbio.c (bk_iohh_bnbio_read): Only set timeout if one is
	wanted. Remember to clear it if not needed.

2002-09-12  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_time.c (bk_time_iso_format): Fixed minor bug in BK_TIME_FORMAT_FLAG_NO_TZ.

2002-09-12  James Tanis  <jtt@hawking.sysdetect.com>

	* lib/b_run.c (bk_run_set_dont_block_run_once): Add flag so that
	asynchronous events can cause the current bk_run_once() not to
	block, just as callers of bk_run_once() may with
	BK_RUN_ONCE_FLAG_DONT_BLOCK. 

2002-09-10  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_run.c (bk_run_checkeventq): Don't allow bk_run_once to
	block if one or more events have fired in this iteration.

	* lib/b_bnbio.c (bk_iohh_bnbio_read): Allow time outs.
	(bnbio_set_timeout): Set/clear the timeout event.
	(bnbio_timeout): time out callback.
	(bk_iohh_bnbio_is_timedout): Is this bnbio struct in timeout state
	(bk_iohh_bnbio_is_canceled): Is this bnbio struct in cancelled state

2002-09-06  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_strcode.c (bk_string_str2xml): Allow non-printable
	characters in xml string (well it's really more of an xml-like string).

2002-09-05  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_time.c (bk_time_iso_format): Added BK_TIME_FORMAT_FLAG_NO_TZ.

	* lib/b_run.c (bk_run_register_bnbio): 
	(bk_run_unregister_bnbio): 
	(bk_run_bnbio_cancel): Functions for managing blocking
	[-non-blocking] i/o so that blocking calls can be cancelled.

	* lib/b_bnbio.c (bk_iohh_bnbio_read, write): Check for new bnbio
	cancel flag.

2002-09-05  Seth Robertson  <seth@winwood.sysdetect.com>

	* lib/b_relay.c (bk_relay_ioh): Add BK_RELAY_IOH_DONTCLOSEFDS for
	various special purposes.
	(bk_relay_ioh): Add BNK_RELAY_IOH_NOSHUTDOWN for same

	* lib/b_config.c (bcf_create): You must specify that this is
	unordered.

	* lib/b_ioh.c (bk_ioh_close): You must specify that this is
	unordered.

	* lib/b_config.c (bcf_destroy): DLL might not be created yet

2002-09-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/Makefile (BK_LARGE_LIBSRC): add new b_strcode.c

	* lib/b_strcode.c: split more functions out of b_strconv.c so that
	Insure won't choke on it

	* lib/b_strconv.c (bk_string_flagtoa): return 0 on success, per docs

2002-09-04  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c: String registry functions (maps a string to a
	unique ID for quick comparison and perfect hashing).
	(bk_string_registry_idbystr): Program for empty repository boundry
	case (doh!).

2002-08-31  Seth Robertson  <seth@hawking.sysdetect.com>

	* lib/b_netutils.c (bk_inet_ntoa): Need to null terminate
	addresses.  I *hope* this will not break anything, and it was
	previously documented to require my change...
	
2002-08-27  Seth Robertson  <seth@winwood.sysdetect.com>

	* lib/b_string.c (bk_strhash): Combine old and new string hash
	functions into one, with flag selection, old default.

2002-08-27  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_oscompat.h (BK_FUNCNAME): Insure doesn't grok __func__

	* lib/b_string.c: weird insure++ error was just due to feeping
	creaturism of string functions; splitting b_string.c into two files
	eliminates the problem until we add another ten functions more...
	
	* lib/b_strconv.c: string conversion functions [bk_string_*to* et al.]

2002-08-27  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_string.c (bk_string_atof): Provide alternate version
	#ifdef INSIGHT -- insight cannot compile it for some reason.

2002-08-22  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_string.c (bk_strnchr): added function

	* lib/b_url.c (bk_url_parse_authority): parse authority section of url

2002-08-20  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_sysutils.c (bk_gethostname): Linux changed, without
	documentation of the new value, the error value for gethostname
	when the buffer supplied is not large enough.  Grr...

2002-08-19  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_fun.c (bk_fun_trace): Don't dump on missing B

2002-08-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_bufhash): hash for vptr

2002-08-14  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_listnum.c (bk_listnum_next): New flag parameter:
	BK_LISTNUM_PRUNE_EMPTY to prune lists with no elements in them.
	Significant time savings for scan detection.

2002-08-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (FLAG_BEGIN, FLAG_END): use [], not <>, for XML compat
	(bk_encode_base64): don't read past end of buffer when len==1

2002-08-14  James Tanis  <jtt@saint.sysdetect.com>

	* include/libbk.h (BK_ENTRY): Do not call bk_fun stuff if !B.
	(BK_ENTRY_MAIN): Special BK_ENTRY for main() (ie when B == NULL,
	but you still want bk_fun stuff).
	(BK_RETURN): (and pals) Do not do anything if B == NULL.

2002-08-09  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: bk_ioh_printf takes const char *format

2002-08-12  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_netutils.c (bk_inet_ntoa): "Thread safe" version of
	inet_ntoa(). 

2002-08-05  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_url.c (bk_url_parse): break out host/service from authority
	even if BK_URL_FLAG_STRICT_PARSE is specified.
	
2002-07-24  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_string_flagtoa, bk_string_atoflag): avoid using
	'=' [looks like parameter assignment]; use traditional <> delimiters
	(bk_string_atoflag): more aggressive error checking
	(bk_strnstr, bk_strstrn): fix fencepost error in non-MEMMEM code

2002-07-23  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_string_atod): assign value when parsing zero val

	* include/libbk_oscompat.h (UINT64_MAX): portability

	* lib/b_string.c (bk_string_flagtoa, bk_string_atoflag): revised to
	support symbolic flag i/o with kernel %b / printb style flag names
	(bk_string_atoull_int, bk_sting_ato[ui], bk_sting_ato[ui]ll): better
	error checking, including: overflow, garbage with no digits, negative
	signs in unsigned parse; correct handling of INT_MIN, LLONG_MIN
	(NAN, INFINITY): portability

2002-07-22  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_STRING_ATOD_FLAG_ALLOW_INF, NAN): new flags,
	add const to some debug, error print arguments
	
	* lib/b_string.c (bk_string_atod, bk_string_atof): allow infinity or
	not-a-number if you ask for it with flags
	
	* lib/b_debug.c (bk_debug_*print*): add const to some arguments

	* lib/b_error.c (bk_error_*print*): add const to some arguments

2002-07-19  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_string.c (bk_strhash): Import new hash function.  Perl and
	its author claim that it is good.  We'll see.

2002-07-16  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c: Stupid bounds checking.

	* lib/b_rand.c: Stupid bounds checking.

2002-07-12  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_error.c (be_error_time): fit timestamp in space provided
	(be_error_output): use shorter timestamps, limit program name size
	(be_error_append): use shorter timestamps, limit program name size

2002-07-08  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_crc.c: computation of CRC-32

2002-06-28  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_memx.c (bk_memx_lop): use memmove, as overlap may occur

2002-06-26  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_netinfo.c (bk_netinfo_from_socket): ERR->WARN for peer sockname

	* lib/b_addrgroup.c (tcp_connect_activity): don't gripe at shutdown
	(tcp_listen_activity): don't gripe at shutdown

2002-06-22  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_addrgroup.c (tcp_connect_start): Allow zero timeout to
	mean no timeout, not immediate timeout.

2002-06-21  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_run.c (bk_run_run): Reset run_over flag during entry
	so that multiple run loop executions don't trash each other.

2002-06-19  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_general.c (bk_general_destroy_insert): Copy-paste
	error--destroy functions were never called before.

2002-06-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (bk_alloca_free): just a no-op
	(BK_ERROR_FLAG_SYSLOG_FULL, BRIEF, NO_FUN): error verbosity flags

	* lib/b_error.c (bk_error_init): set error flags in beinfo
	(bk_error_config): maybe set error flags in beinfo
	(bk_error_iprint): use level name instead of number, support BRIEF
	(bk_error_idump): pass through error flags
	(bk_error_istrdump): pass through error flags, avoid strdup
	(be_error_output): when syslogging, don't duplicate fun/level output,
	support BRIEF, NO_FUN
	(be_error_append): support BRIEF, NO_FUN

	* lib/b_general.c (bk_general_vsyslog): don't call alloca with constant
	[use array auto variable instead]; level format consistent w/bk_error_*
	(bk_general_errorstr): level names consistent with log4j
	(bk_no_free): No BK, no free; no woman, no cry

2002-06-14  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_ioh.c (ioh_queue): Don't allow a buffer which fails to
	contain either data [with len > 0] or a cmd.

2002-05-30  Brian Lindauer  <lindauer@malkmus.sysdetect.com>

	* lib/b_string.c (bk_vstr_cat): append routine that allocates more
	memory as needed.
	(bk_string_alloc_sprintf): fix inconsequential memory leak.

2002-05-28  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_memx.c (bk_memx_lop): Truncate a memx from the front.

2002-05-21  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_stdwrfun): Untested support for compression
	on write.
	(bk_ioh_stdio_init): Ioctl like function to set up stdio "extras"
	like compression, authentication, encryption.

2002-05-16  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_addrgroup.c (do_net_init_af_inet_udp_listen): Enable
	creation of UDP server sockets, even if the IOH part doesn't work
	yet.

	* lib/b_getbyfoo.c (bk_gethostbyfoo): Correct comments and illegal
	arguments code for non-existance of ``*ih''

2002-05-15  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_write): No point in attempting to free data
	if data is NULL.
	(bk_ioh_coalesce): NULL termination not included in length

2002-05-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_string_atof): FLT_{MIN,MAX} work differently
	than INT_{MIN,MAX} - you need to use appropriately signed versions

2002-05-14  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_coalesce): BK_IOH_COALESCE_FLAG_TRAILING_NULL
	ensures coalesces into a valid string, suitlable for certain
	protocols.

	* lib/b_string.c (bk_mempbrk): strpbrk for vptrs (memory ranges)

2002-05-14  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_readallowed): When unblocking, attempt to
	see if there might be line-mode data queued up to go to the user,
	and schedule a job to deliver it at some later moment.
	(ioht_line_other): Don't deliver data to user if throttled
	(read-not-allowed).

	* include/libbk.h (BK_RUN_USERFLAG): Create user flags for the
	bk_fd_handler to allow users to call the function for their own
	purposes.

2002-04-25 Brian Lindauer <lindauer@sysd.com

	* lib/b_error.c: when flushing error queues, decrement queue count
	for each error removed.

2002-05-07  James Tanis  <jtt@winwood.sysdetect.com>

	* include/libbk.h: BK_SWAP macro for swaping two values of any type.

2002-05-06  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_listnum.c (bk_listnum_destroy): Free up clc.

	* lib/b_general.c (bk_no_free): Function to do nothing but satisfy
	the compiler. Used for "freeing" that which was allocated with alloca(3).

	* lib/b_listnum.c (bk_listnum_get): Free head if error.
	(bk_listnum_destroy): Free mainl.

2002-05-03  Seth Robertson  <seth@yeah.baka.org>

	* src/bttcp.c (main): Don't fall through multicast looping to ttl.

2002-05-02  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_run.c (bk_run_once): Unnecessary initialization that makes
	be feel better.
	(bk_run_poll_add): Uh, actually need to assign brfn after allocation

	* src/bttcp.c (main): Switch to dash versions of argument names,
	and while I'm at it, get rid of the spaces in a long option
	names...(hey it works!)

2002-05-01  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_stdsock.c (bk_stdsock_multicast): Move maddrgroup
	reference inside of maddrgroup protection

2002-05-01  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_string_atod): Use portable math functions

2002-05-01  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_string.c (bk_string_atod): Convert strings to doubles.
	(bk_string_atof): Convert strings to floats.

2002-04-30  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_addrgroup.c: Run new callback state
	"BkAddrGroupStateSocket" every time a new socket() is created, to
	allow user opportunity to set socket options like multicast and
	broadcast.

	* src/bttcp.c: Enable UDP, multicast, and broadcast support, such
	as it is.

	* lib/b_stdsock.c: Support routines to turn on multicast and
	broadcast abilities for sockets.

2002-04-29  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_ioh.c: Revert "fix" made recently to allow ioh_close's
	on full queues to succeed. Replace with real fix (which is to
	bypass queue full check on commands).

2002-04-26  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_oscompat.h: map O_SYNC->O_FSYNC, O_NONBLOCK->O_NDELAY
	on any OS which feels the need to be different
	
2002-04-26  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_pollio.c (polling_io_ioh_handler): Using [0] to reference
	a pointer which is not in an array is legal but ugly.

	* lib/b_bnbio.c (bk_iohh_bnbio_write): Do at least one poll on
	each write to clean up the state created by the write (under
	normal conditions).

2002-04-26    <seth@luggage>

	* src/bttcp.c (main): Add UDP option, add -c close-after-one
	option, start adding multicsat options, but still need backend
	support

	* lib/b_addrgroup.c: Sanify as destruction--multiple frees allowed.
	Add UDP transmit support (receive support is a bit more tricky)

2002-04-25 Brian Lindauer <lindauer@sysd.com>

	* lib/b_error.c: added bk_error_istrdump to dump errors to string
	* include/libbk.h: same
	
2002-04-18  Seth Robertson  <seth@startide.sysdetect.com>

	* include/libbk_net.h: Internal version of common network headers (struct ip, etc)

2002-04-15  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_bits.c (bk_bitcount): New function to count numbers of
	bits in a word.

2002-04-05  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_memrchr): bounded string [buffer] strrchr

2002-04-05  James Tanis  <jtt@saint.sysdetect.com>

	* awb/awb-ids (multiple_places) Convert to use new jobstep stat
	struct instead of two "copyout" u_int's.

	* lib/b_string.c (bk_string_alloc_sprintf): Add more user
	tweakable things to API [and then fix up callers].

2002-04-04  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_strnspacecmp): bounded string comparison
	ignoring whitespace differences

2002-04-01  Seth Robertson  <seth@startide.sysdetect.com>

	* include/libbk_oscompat.h: Size defintions for those who don't have 'em

	* lib/b_string.c (bk_string_printbuf): It is too confusing when
	address bytes and data bytes are next to each other.

2002-03-28  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_string_unique_string): Create a (very likely)
	unique string.

	* lib/b_md5.c (bk_MD5_extract_printable): Copy out md5 digest into
	32 byte printabe buffer.

	* lib/b_ioh.c (ioht_vector_queue): Same fix as below. 

	* lib/b_pollio.c (bk_polling_io_write): Keep trying to queue data
	if refused until you either succeed or faile miserably.

	* lib/b_ioh.c (ioh_queue): Don't refuse to queue a large buffer if
	the output queue is empty (even of said buffer exceeds the queue max).

2002-03-27  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_string_alloc_printf): Function to allocate a
	string with a printf API.

2002-03-28  Seth Robertson  <seth@winwood.sysdetect.com>

	* include/libbk.h (BK_FLAG_ALLSET): Macro to test for all flags
	being set, not any flag.  (Should this be ARESET instead?)

2002-03-26  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_include.h: work around Insure problems with
	_FILE_OFFSET_BITS 64

	* test/Makefile (BK_SIMPLE_INTERNALPROGS): support "make test_fun"

	* test/test_config.c (main): bk_general_debug_config obviates
	bk_debug_setconfig

	* test/test_getbyfoo.c (main): bk_general_debug_config obviates
	bk_debug_setconfig

	* test/test_time.c (main): use BK_RETURN to keep Insure happy

	* test/test_bio.c, test/test_config.c, test/test_errorstuff.c:
	* test/test_fun.c, test/test_getbyfoo.c, test/test_ioh.c:
	* test/test_locks.c, test/test_stringconv.c, test/test_time.c:
	* test/test_url.c, test/testhashspeed.c:
	* test/testrandidea.c: use LOG_USER, not BK_ERR or LOG_LOCAL0
	
2002-03-19  James Tanis  <jtt@saint.sysdetect.com>

	* include/libbk.h (BK_USECTONSEC): Convert usecs <=> nsecs.

2002-03-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_oscompat.h (_PATH_DEVNULL): if not defined in unistd.h
	(BK_RHS): force compile error when using ?: or , expression as lvalue

2002-03-19  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_listnum.c: List of linked list heads.  Data structures for
	fixed expiry queues with large numbers of members that get deleted
	and reinserted a lot.

2002-03-18  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_exec.c (bk_pipe_to_exec): Toss stderr if user requests.

2002-03-18  Alexander Dupuy  <dupuy@sysdetect.com>

	* test/Makefile (BK_SIMPLE_INTERNALPROGS): build test_fun with
	funky path to test path stripping

	* test/test_fun.c: simple tests for bk_fun

2002-03-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_exec.c (bk_exec): use execvp where possible
	(bk_search_path): the most broken code I have seen in a long time
	- it didn't even come close to working [but was surely faster to write
	than something using g_spawn_async_with_pipes :-]

	* lib/b_url.c (bk_url_unescape): define in terms of bk_url_unescape_len
	(bk_url_unescape_len): this is the more fundamental variant
	(bk_url_getparam): allow alternate delimiters, case-independent tokens,
	whitespace in parameters

2002-03-14  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_url.c (bk_url_unescape_len): Same as bk_url_unescape(),
	but constrained to the given len.

2002-03-11  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_string_printbuf): Don't write beyond end of str.

2002-03-07  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_pollio.c (bk_polling_io_do_poll): don't block if at EOF

	* lib/b_ioh.c (ioht_vector_other): document one of probably many
	bugs in vectored i/o
	(ioh_runhandler): avoid recursive close when destroying

2002-03-06  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_FLAG_SET, BK_FLAG_CLEAR): make these statement
	macros to prevent inadvertent use in tests where BK_FLAG_IS* is meant
	(BK_URL_SCHEME_EQ, BK_URL_AUTHORITY_EQ): use STR{N,}EQ as appropriate
	(BK_STREQCASE, BK_STRNEQCASE): use str{n,}casecmp
	(BK_URL_SCHEME_EQ, BK_URL_AUTHORITY_EQ, BK_URL_PATH_EQ): use correct
	str{n,}{case,}cmp variant
	
2002-03-05  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (CONVERT_SUBSECSNTP2TIMEVAL): for completeness
	(CONVERT_SUBSECSNTP2TIMESPEC): use argument to macro, not "secs"
	(CONVERT_SUBSECSTIMESPEC2NTP): renamed, use 1LL for left shift

	* lib/b_time.c (bk_time_iso_format): use correct MICROSEC for
	proper determination of desired precision
	(bk_time_ntp_format): generate ntp stamps, too
	(bk_time_ntp_parse): simplify, eliminate malloc, use strtoul, not baka

	* lib/b_string.c (bk_decode_base64): don't NUL terminate vptr buf

	* test/entropy/randtest.c (log2): don't define function if macro exists

2002-03-05  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_listen): Add
	SO_REUSEADDR to listening socket.

2002-03-04  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_decode_base64): Don't demand that base64 encoded
	buffer to be string.

2002-03-01  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_oscompat.h (BK_INIT_FUN, BK_FINISH_FUN) [__INSURE__]:
	use asm() to set up ctors/dtors since that doesn't offend insure++
	
2002-02-27  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_time.c (bk_time_ntp_parse): Parse ntp time into struct
	timespec [format function still needed].

2002-02-25  James Tanis  <jtt@saint.sysdetect.com>

	* src/proto.c (main): Clarify the arc preprocessing.

2002-02-22  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_connect): remove dead code
	(tcp_end): remove dead code

	* lib/b_pollio.c (polling_io_ioh_handler): suppress Insure error

	* include/libbk.h (BK_STRINGIFY): expand argument into string form

	* include/libbk_oscompat.h (BK_FUNCNAME): portable use of __func__
	(ntohll, htonll): cast everything to u_int64_t before 32 bit shifts
	suppress Insure error
	
2002-02-20  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: declare bk_ioh_print{,f}

2002-02-20  Brian Lindauer  <lindauer@sysdetect.com>

	* lib/b_ioh.c: Added b_ioh_print and b_ioh_printf

2002-02-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_ioh.c (bk_ioh_fdctl): fcntl F_SETFL takes value, not pointer

2002-02-18  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_relay.c (bk_relay_iohhandler): update to use new coalesce interface.

	* lib/b_ioh.c (bk_ioh_coalesce): New flags to force (on input)
	copies and (on output) to indicate whether a copy had not
	happened. 
	(bk_ioh_coalesce): Do *not* free input vptr (violation of IOH API).

2002-02-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_OR): improve doxygenation

	* include/libbk_oscompat.h: undef _CONSTRUCTOR_ATTRIBUTE,_INIT_PRAGMA
	for Insure++ compilation
	
2002-02-11  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_string.c (bk_string_intcols): DOH Some real dumb errors.

2002-02-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_string.c (bk_string_intcols): fix bugs, spelling errors,
	restrict bases

2002-02-07  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_exec.c (bk_pipe_to_process): possible decriptor leak repair

	* lib/b_string.c (bk_string_intcols): Count columns required for int

2002-01-31  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/Makefile (BK_LARGE_LIB): use ${LIBEXT} for libtool build

2002-01-30  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_oscompat.h (ntohll, htonll): 64-bit host/network order

2002-01-24  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_include.h: control some inclusions from autoconf

	* include/libbk_oscompat.h: autoconf control for sockaddr sa_len
	(BK_INIT_FUN): macro for load-time init
	(AF_LOCAL): define if missing but AF_UNIX exists

	* lib/b_netutils.c (bk_netutils_get_sa_len): use autoconf control

	* lib/b_time.c (bk_time_iso_parse): avoid mktime if it has bugs

2002-01-20  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_skid.c: Initial SKID implementation, or at least the
	*start* of the implementation.

	* lib/b_ioh.c (bk_ioh_coalesce): New coalescion code to centralize
	common activities with ioh buffers.

	* lib/b_relay.c (bk_relay_iohhandler): Use new ioh coalescion code

2002-01-19  James Tanis  <jtt@winwood.sysdetect.com>

	* include/libbk_oscompat.h (realloc): Redefine realloc to
	specifically use malloc when ptr is NULL (mostly for Insight,
	though protects against *really* broken malloc libs).

2002-01-19  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_ioh.c (bk_ioh_update): Duh, forgot to actually allow
	iofunopaque to be updated

	* src/genrand.c: Random number production program.  Suitable for
	password generation!

	* lib/b_md5.c: MD5 hash algorithm
	* lib/b_rand.c: Random number generation

	* test/testhashspeed.c: Hashing tests
	* test/testrandidea.c: Update with results

2002-01-19  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: declare bk_time_iso_{parse,format}, bk_timegm

	* lib/b_time.c: implement iso 8601 date/time format & parse, timegm

	* lib/Makefile (BK_LARGE_LIBSRC): add b_time.c

2002-01-17  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_pollio.c (polling_io_ioh_handler): Patch up a memory leak
	caught by insight.

2002-01-16  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h: declare bk_url_getparam

	* lib/b_url.c (bk_url_getparam): parse semicolon-delimited parameters

2002-01-15  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_exec.c: Routines in support of executing processes.

2002-01-14  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_pollio.c (bk_polling_io_do_poll): Only set the don't block
	if there's data already sitting in queue.

2002-01-14  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_run.c (bk_run_getpref): Proper argument checking.
	(bk_run_setpref): Proper argument checking.

	* lib/b_ioh.c (ioh_runhandler): Setpre on correct fd.

2002-01-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (bk_iohh_bnbio_tell): use int64_t, not BSD quad_t

	* include/libbk_internal.h (struct bk_polling_io): use int64_t

	* lib/b_bnbio.c (bk_iohh_bnbio_tell): return int64_t

	* include/libbk_include.h (struct ether_addr): defined if none of the
	possible include files are present

	* include/libbk_oscompat.h: use BK_MINGW
	(HAVE_INET6): #ifdef AF_INET6 and HAVE_inet_pton

	* lib/b_getbyfoo.c (bk_gethostbyfoo, copy_hostent): #ifdef HAVE_INET6

	* lib/b_netaddr.c (bk_netaddr_addrdup, update_bna_pretty): HAVE_INET6
	(bk_netaddr_af2nat, bk_netaddr_nat2af): AF_INET6

	* test/test_getbyfoo.c (host_callback): #ifdef HAVE_INET6

	* lib/b_signal.c (bk_signal_set, bk_signal_set_alarm, bk_signal_reset):
	(bk_signal_reset_alarm): use sigprocmask, not BSD sigblock/sigsetmask

2002-01-09  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_ENV_GWD): use BK_OR()
	(BK_VERSION_CMP): use BK_OR
	(BK_TV_CMP): use BK_OR

	* test/test_url.c (PRINT_ELEMENT): test bk_url_unescape

	* lib/b_url.c (bk_url_unescape): new function to expand % escapes
	(bk_url_parse): separate strict parse flag for function from flags
	in structure
	(count_colons): eliminated this obsolete static function
	
	* lib/b_general.c (bk_general_proctitle_init): don't confuse flag
	for function with flag in structure; always turn off proctitle
	stuff when running with Insure++

	* lib/b_debug.c (bk_debug_destroy): free bk_debug struct itself

	* include/libbk.h (BK_OR): wrap GNU extension to ?: omitting middle arg

	* include/libbk_i18n.h: INSIGHT->INSURE, include <locale.h>

	* include/libbk_include.h (u_int#_t): work around esoteric gcc'isms
	that Insure++ doesn't grok at all

2002-01-08  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_string.c (bk_string_str2xml): Function to convert a normal
	string to an xml string.

2002-01-02  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_nvmap.c (bk_nvmap_value2name): Functions to map strings to values.

2001-12-31  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_pollio.c (bk_polling_io_data_destroy): make sure that ptr
	exists before freeing.

2001-12-27  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_include.h: <netinet/if_ether.h> if no <net/ethernet.h>

2001-12-27  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_url.c (bk_url_parse): missed a few critical search
	stopping characters in the fuzzy logic code. 

2001-12-27  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/Makefile ($(GROUPTOP)/include/libbk_autoconf.h): create link
	to bkmk-generated file

	* include/libbk_include.h: use BK_MINGW, autoconf HAVE_ defines

	* include/libbk.h: include libbk_autoconf.h

	* include/Makefile (BK_PUBLIC_INC): install libbk_autoconf.h

2001-12-21  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_string.c: constifying

2001-12-21  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_url.c: Brand new rfc2396 compliant url parsing code.
	(bk_url_parse): Free up apparently unset data because it is not in
	fact unset :-)

2001-12-20  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_fileutils.c: Many many lock related changes. Locks now
	working. Interface change to allow the discriminatin between "lock
	held" failure and general failure. Admin file removed when empty.

2001-12-19  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_run.c (bk_run_on_demand_add): Set brof key (DOH!)
	(bk_run_on_demand_remove): Actutally destroy brof you are removing.

	* lib/b_pollio.c (bk_polling_io_create): Sigh. Fully initialize
	structure (despite memset()) in order to pacify insight.
	(bk_polling_io_close): Lingering close.
	(bk_polling_io_close): Close out ioh too.
	(polling_io_ioh_handler): Don't destroy bpi if asked not too
	(lingering close).
	(bk_polling_io_data_destroy): We only need to destroy one vptr.

	* lib/b_ioh.c (ioh_execute_cmds): Make sure you clear and destroy
	the dll regardless of content of nodes.

	* lib/b_bnbio.c (bk_iohh_bnbio_close): Lingering close.

2001-12-14  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_ioh.c: Convert messages to use structures and dll's
	instead of an OR'ed integer.

2001-12-13  James Tanis  <jtt@saint.sysdetect.com>

	* include/libbk.h (enum): BkIohStatusIohAbort removed owing to non-use.

2001-12-12  James Tanis  <jtt@saint.sysdetect.com>

	* include/libbk.h (bk_ioh_status_e): Convert ioh handler status to
	an enum and update everybody who uses it.

	* lib/b_ioh.c: Rename bk_iohhandler, bk_iohhandler_f to bring it
	line with standards docs.

	* lib/b_run.c (bk_run_once): Support for aborting bk_run_once if
	another bk_run_once() has exited on the "thread" this bk_run_once
	has just processed.

2001-12-11  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_destroy): make this static.

	* src/bttcp.c (connect_complete): noone other than ioh.c should
	use bk_ioh_destroy.

	* lib/b_url.c (bk_url_parse): Fix bk_strndup() usage to account
	for its better behavior.
	(bk_url_parse): Allow caller to pass in flag which makes bare path
	component return a protocol of "file".

	* lib/b_string.c (bk_strndup): Allocate extra space for NULL.

	* lib/b_signal.c (bk_signal_mgmt): Allow users to manage signal
	handlers. 
	(bk_signal_set_alarm): Function to safely seize control of a signal.
	(bk_signal_reset_alarm): Function to safely reset the above.
	(bk_signal_set): Function to safely seize control of any signal.
	(bk_signal_reset): Fuction to safely reset the above.

	* lib/b_string.c: Eliminatef bk_strdelim which is identical to
	strpbrk (thanks to Alex for pointing this out).

	* lib/b_url.c (bk_url_parse): Correct for ipv6.

2001-12-10  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_string.c (bk_strdelim): new function to return first
	position in s *not* in string s1.
	(bk_strndup): Like strdup but only do n chars.

	* lib/b_url.c: File for url munging.
	(bk_url_parse): Seth's alg. (at least mostly done).

	* include/libbk.h (struct bk_version): bk_version stuff added.

2001-12-06  James Tanis  <jtt@winwood.sysdetect.com>

	* libbk: many other dumb insight related cleanup.

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_listen): Prevent
	memory leack in accept state.

2001-12-05  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_memx.c (bk_memx_get): Return current used, not current allocated

	* lib/b_general.c (bk_general_init): Insight does some really stupid things.

2001-12-05  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_config.c: Make sure that bc is checked after SET_CONFIG

2001-12-04  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_netutils.c (bk_netutils_start_service_verbose): Null out
	the appropriate things at the appropriate time to avoid double free.

	* libbk: (everwhere) Replace XXX's with standards document
	compliant notation

	* include/libbk.h: Camel case and _e all enums (propogate through
	source files too).
	Change callback_t's to callback_f's (propogate).

2001-11-30  Seth Robertson  <seth@startide.sysdetect.com>

	* README.i18n: Internationalization hints
	* src/proto.c: Internationalized
	* include/libbk_i18n.h: Starting formal internalization support

2001-12-04  James Tanis  <jtt@winwood.sysdetect.com>

	* src/bttcp.c (connect_complete): Check for bag's existence as per
	the API

	* lib/b_netinfo.c (bk_netinfo_from_socket): make sure len is
	initialized (jtt must have dropped this somewhere today).

	* src/bttcp.c (proginit): Patch up old service staring names to
	new. 

	* lib/b_netutils.c (bk_parse_endpt_no_defaults): Convenience
	function for parsing a url with no default values (as in a default
	url).
	(bk_netutils_start_service): Short version of start_servce (old
	version renamed to BLAH_verbose).
	(bk_netutils_make_conn): Short version of make_conn (old version
	renmaed to BLAH_verbose).

	* lib/b_addrgroup.c (net_init_end): Don't bypass callback on error
	(DOH!).

	* src/bttcp.c: Convert to using new event granularity (ie: fix
	timeouts).

2001-12-03  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_netutils.c: Convert to new bk_addrgroup_state_e values.
	(bk_netutils_make_conn): Make sure that values handed over to sss
	are not freed. Make sure that sss is not freed once callback has
	been called (it was freed in the callback).
	(bk_netutils_make_conn): make sure that all temporary values are
	freed. 

	* lib/b_netinfo.c (bk_netinfo_advance_primary_address): Function
	to iterate thru address list, setting each to primary in turn.

	* lib/b_addrgroup.c: Converted state info over to new mode.
	(tcp_connect_start): Use advence_primary_address() interface
	(bk_net_init_sys_error): Convert errno's to error state.

	* lib/b_run.c: Debugging code
	(bk_run_close): Check fdassoc_delete return code.

	* lib/b_ioh.c (bk_ioh_update): Fix sanity checking for new API.

	* lib/b_addrgroup.c (net_init_end): Move bag allocation
	here. Allocate/free everytime.
	(tcp_connect_activity): Check gottype flags.
	(tcp_listen_activity): Check gottype flags.
	(net_init_end): Alter interface since bag allocation done here.

	* lib/b_servinfo.c (bk_servinfo_serventdup): Host/network order SNAFU.
	(bk_servinfo_serventdup): protocol info no longer required.

	* lib/b_getbyfoo.c (bk_getservbyfoo): Host/network order SNAFU.

2001-11-30  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_servinfo.c: protostr nuked from servinfo.

	* lib/b_netutils.c (bk_netutils_start_service): Conform to new
	interface. 
	(sss_serv_gethost_complete): Best effort callback.
	(bk_netutils_make_conn): Get proto and serv info in one shot
	(bk_netutils_make_conn): Best effort callback.

	* lib/b_getbyfoo.c (bk_getprotobyfoo): ip ==> iproto
	(bk_getprotofoo): Force lookup if copyout is set
	(bk_getservbyfoo): protostr now out of bk_servinfo.
	(bk_getservbyfoo): Assume "tcp" if protocol can't be determined.
	(bk_getservbyfoo): Force lookup if copyout is set
	(bk_gethostbyfoo): No copy out.
	(bk_gethostbyfoo): Make callback on errors if at all possible.
	(bk_gethostbyfoo_abort): Renamed to better name.

2001-11-29  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_relay.c lib/b_ioh.c: Code review day 4

2001-11-28  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_memx.c lib/b_run.c lib/b_string.c lib/b_ioh.c: Code review day 3

2001-11-27  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_addrgroup.c lib/b_getbyfoo.c lib/b_netaddr.c
	lib/b_netinfo.c lib/b_netutils.c lib/b_protoinfo.c
	lib/b_servinfo.c lib/b_run.c lib/b_stdfun.c: Code review day 2

2001-11-28  James Tanis  <jtt@winwood.sysdetect.com>

	* test/test_getbyfoo.c (progrun): Fix up to conform to new API.

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_listen): Don't free
	bag.

2001-11-27  James Tanis  <jtt@winwood.sysdetect.com>

	* src/bttcp.c: Eliminate useless function.

2001-11-26  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_bits.c lib/b_general.c lib/b_config.c lib/b_debug.c
	lib/b_error.c lib/b_fileutils.c lib/b_fun.c lib/b_funlist.c:
	Day one, code review.

2001-11-26  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_fileutils.c (bk_fileutils_modify_fd_flags): Added SET
	option as per Seth's suggestion.

2001-11-21  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_addrgroup.c (bk_addrgroup_get_server_socket): Get the
	server socket from the handle.
	(bk_addrgroup_server_close): Close up the server based referenced
	by the handle.
	(as_server_copy): Copy an as from the server as to the connected as.
	Adjust everybody to send server_handle on callback.
	(tcp_listen_activity): Make sure you change the state of the *new*
	as not the old.
	Convert everybody to store complete state in as.

2001-11-20  James Tanis  <jtt@winwood.sysdetect.com>

	* src/bttcp.c: Converted to use new convenient interface. State
	code removed.

	* lib/b_netutils.c (bk_netutils_make_conn): Make a connection with
	a convenient interface.
	(sss_connect_rgethost_complete): Call back when we've completed
	looking up the remote host.
	(sss_connect_lgethost_complete): Callback when we've completed
	looking up the local host.

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_listen): Call back on
	server ready.
	Convert everybody to use state.
	(bk_netutils_commandeer_service): Take over an existing server socket.
	Convert back to as->as_bag as pointer.
	(as_destroy): Destroy as completely.
	(net_init_check_sanity): Make sure you don't reference a pointer
	after you've verified that it DOESN'T EXIST!! sheesh...

2001-11-20  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_config.c (bk_config_get): Provide method to access config
	configuration parameters.

2001-11-20  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_addrgroup.c (tcp_end): Flag to request BAG on connection
	completion, otherwise we clean it up.

	* src/bttcp.c: Convert to use new service start interface.

	* lib/b_netutils.c (bk_parse_endpt_spec): Parses BK "URL".
	(bk_netutils_start_service): Start up a service with very user
	friendly arguments.
	(sss_gethost_complete): Where to go when hostname search complets
	in above function.

2001-11-19  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_run.c (bk_run_destroy): remember to destroy event queue.

	* lib/b_addrgroup.c (bag_destroy): Remeber to destroy bni's
	internal to bag.

	* lib/b_getbyfoo.c (bk_getprotobyfoo): Clean up allocated protoent
	if not saved.
	(bk_getservbyfoo): Clean up allocated servent if not saved.

2001-11-18  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_string.c (bk_encode_base64): Correct pointer bugaboo.
	Mime now working.

	* src/bttcp.c: Update James' documentation and formatting.  Shame on James.

	* lib/b_string.c (bk_encode_base64): Mime encode/decode routines

	* src/mmcat.c (main): Mime encode/decode test program (useful too)

2001-11-16  James Tanis  <jtt@winwood.sysdetect.com>

	* src/bttcp.c (main): If using -r without -l make the local name
	BK_ADDR_ANY.
	(proginit): Don't create remote bk_netinfo if we're receiving.
	Listening transfers now working.

	* lib/b_getbyfoo.c (bk_gethostbyfoo): support for "resolving" the
	special token BK_ADDR_ANY ("resolves" to the ANY address for the
	given address family).

	* lib/b_addrgroup.c (do_net_init_af_inet_tcp_listen): Some copy
	paste errors copied from connect section.
	(net_init_check_sanity): Correct sanity checking. Was doing
	*everything* under if (remote && local) condition which was
	patently wrong

	* test/test_getbyfoo.c (main): Better usage message.

	* src/proto.c (main): Example of how to configure pOpt to print
	out the meaning of an option argument on the usage (brief) line.

	* src/bttcp.c: Too many chages. *Connecting* relay works.

	* lib/b_netinfo.c (bk_netinfo_from_socket): Initialize inet
	sockaddr's correctly.
	(bk_netinfo_from_socket): Don't pass sockaddr when you mean to
	pass only the contained address.
	(bk_netinfo_from_socket): Split out INET6 (sigh). There are *just*
	enough differences from INET to require this.
	(bk_netinfo_info): Force bni to update and return pretty string.

	* lib/b_addrgroup.c (bk_addrgroup_destroy): Public interface for
	addrgroup destruction.
	(net_init_abort): Abort network initiation with correct clean up.
	(net_init_end): Finish network initiation with correct clean up.
	(tcp_connect_activity): Make sure that the event is removed and
	NULL'ed before when activity is detected.
	(tcp_connect_start): Don't recompute the socket type when you
	already know it.
	(do_net_init_af_inet_tcp_listen): Don't recompute the socket type
	whe you already know it.

	* lib/b_addrgroup.c (everywhere): Convert to new net_init
	strategy. Lots of smaller functions with specific tasks instead of
	monstrously large heterogenous ones.

	* lib/b_addrgroup.c (everywhere): replace net_close with
	net_init_abort(). 

2001-11-16  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (ioht_line_other): Minor break nit
	(ioht_vector_other): Subroutine needs to be in place where it can
	be executed by everyone who needs it.

2001-11-16  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_ioh.c (bk_ioh_init): all handler to be NULL with only a
	warning. This is but legal (see bk_ioh_relay).

	* lib/b_netinfo.c (bk_netinfo_update_hostent): pass bni *not*
	bni->bni_addrs (sigh).
	(bk_netinfo_destroy): Don't forget to destroy clc's

2001-11-15  James Tanis  <jtt@winwood.sysdetect.com>

	* libbk: Too many changes to document here. Basic support for
	asynchronous connect (working).

2001-11-13  James Tanis  <jtt@winwood.sysdetect.com>

	* include/libbk.h (struct bk_netinfo): Redo comments for doxygen.

	* test_getbyfoo.c: test case for doing queries with NULL copyout
	variables.

	* b_netaddr.c: Properly updae a bk_netaddr on the basis of a net
	address. 

	* b_getbyfoo.c: Fixes for allowing copyout structure to be NULL.

2001-11-15  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (CALLBACK) (bk_ioh_close): Don't close if we are in
	the middle of a user callback, as this will leave the callee
	hanging.  Defer the close instead.  Eliminate notifyclose--we will
	*always* notify.

	* lib/b_relay.c (bk_relay_iohhandler): He is throttled on read,
	not me, when I write out some data.

	* lib/b_ioh.c (ioh_queue): Queue full return code being dropped by
	all and sundry.

2001-11-15  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_fun.c (bk_fun_exit): More info about implicit exits

	* lib/b_ioh.c (ioh_dequeue_byte): Abstract shared functionality
	into function.

2001-11-14  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_signal.c (bk_signal): conditionalize SA_SIGINFO, and
	document the problems with the current API if SA_SIGINFO exists
	and is used.

2001-11-14  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c (ioht_block_other): Line misordering causing
	blocking to return invalid status codes, invalid command switch
	variable (switching on flags instead).
	(ioh_getlastbuf): Must offset for both inuse (read) and used
	(write)
	
	* lib/b_error.c (bk_error_iprint): File handles is another legal
	output source.

2001-11-14  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_ioh.c (bk_ioh_close): Ah silly boy.  You must check for a
	flag only in places where it can be found, not in other random
	flag variables in different flag-spaces.  I suppose Alex can make
	a good argument here about enums.  Hmm.

	* include/libbk.h (bk_debug_printbuf): Typo

2001-11-13  Seth Robertson  <seth@startide.sysdetect.com>

	* src/proto.c (main): You must use bk_general_debug_config *in place of*
	bk_debug_setconfig, not in addition to.

	* lib/b_signal.c (bk_signal): Common interface to async signal handlers

	* lib/b_relay.c: IOH relay code

	* lib/b_ioh.c (ioht_raw_other): Remove data from queue after freeing it.
	IOH now working (for some value of working) in RAW mode
	
	* test/test_ioh.c (relayer): Bug which caused us to trash memory

	* lib/b_error.c (bk_error_idump): Change order--less recent comes first

2001-11-13  Alexander Dupuy  <dupuy@sysdetect.com>

	* test/test_ioh.c (proginit): inet_aton returns zero on error
	(address_resolved): cast sockaddr * argument

2001-11-13  Seth Robertson  <seth@yeah.baka.org>

	* test/test_ioh.c: Add test program
	* lib/b_ioh.c: Add stdio functions

2001-11-12  Seth Robertson  <seth@yeah.baka.org>

	* src/proto.c: Doxygenate

	* lib/b_ioh.c: IOH is now code-complete

2001-11-12  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_getbyfoo.c (copy_hostent): Fencepost error in copying host
	address list.
	(bk_gethostbyfoo): Do not do FQDN searches be default. Allow them
	based on flag.
	(bk_gethostbyfoo): Save addresses in the correct way.

2001-11-08  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_netinfo.c: New file dealing with various aspects of
	network information. All utility functions (perhaps should be
	broken out into two files).

	* lib/b_getbyfoo.c: Port to new BK_MALLOC(CALLOC) semantics.

	* lib/b_string.c (bk_strlen): Acts like strlen, but bounded.

2001-11-07  James Tanis  <jtt@winwood.sysdetect.com>

	* b_run.c: Add function to turn off run. If the run is over make
	sure that select(2) doesn't block.

	* Added bk_gethostbyfoo and support.

2001-11-07  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_general.c: Convert BK_MALLOC to new semantic
	* lib/b_run.c: Convert BK_MALLOC to new semantic
	(bk_run_once): Convert to BK_TV_CMP instead of using float comparison

	* lib/b_config.c: Convert BK_MALLOC to new semantic

2001-11-06  James Tanis  <jtt@winwood.sysdetect.com>

	* test/test_getbyfoo.c (progrun): test program for getbyfoo
	functions. 

	* lib/b_getbyfoo.c (bk_getprotobyfoo): Get protoent by
	anything (not yet mutex'ed).
	(bk_protoent_destroy): Destroy a protoent created by above.
	(bk_getprotobyfoo): Get a servent by anything.
	(bk_protoent_destroy): Destroy the servent created above.

	* lib/b_config.c (bk_config_init): All user to pass in preferences.
	(bk_config_print): print config file.
	(load_config_from_file): Support for included files.
	(check_for_double_include): Recursive function to eliminate double
	inclusion.

	* src/proto.c (main): make sure we call debug_setconfig when
	debugging is turned on.

2001-11-05  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_ioh.c: More functions filled out.

	* lib/b_stdfun.c: Document standard functions.

	* lib/*.c: Change to new CLC iterate interface, updating all CLC #defines
	
	* lib/b_error.c: Add mark and filtering handling to error queue to improve its capabilities.
	Document error handling.
	
2001-11-05  James Tanis  <jtt@winwood.sysdetect.com>

	* src/proto.c (main): Port to popt.

2001-11-02  James Tanis  <jtt@winwood.sysdetect.com>

	* lib/b_run.c (bk_run_destroy): don't destroy things twice, but
	destroy everything at least once.

2001-11-01  James Tanis  <jtt@localhost.localdomain>

	* lib/b_run.c (bk_run_once): Add on demand function calls.
	(bk_run_on_demand_add): Public functions to add and remove functions
	to and from on demand list.
	(bk_run_once): sort out whether idle task should be run.
	(bk_run_once): sort out exactly which timeout to use in select.

2001-11-01  James Tanis  <jtt@saint.sysdetect.com>

	* lib/b_run.c (bk_run_once): update poll functions to have list.
	(bk_run_once): Add idle task.
	(bk_run_poll_add): Public functions to add and remove functions
	to and from poll list.
	(bk_run_idle_add): Public functions to add  and remove functions
	to and run idle list.

2001-11-01  Seth Robertson  <seth@startide.sysdetect.com>

	* lib/b_run.c (bk_run_handsoff): Yes, we do need a method of getting rid of file associations

2001-09-21  James Tanis  <jtt@outpost.tanis.org>

	* lib/b_bits.c: libbk not libphadm.

2001-10-11  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_bits.c (bk_bits_create): allocate a byte for zero bits

2001-10-10  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_bits.c (bk_bits_save): save 0 bits as "0" [distinct from "00"]
	(bk_bits_restore): restore "0" as 0 bits [allocate a byte anyhow]

2001-09-30  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_run.c: Initial baka run environment

2001-09-29  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_STRING_QUOTE_NULLOK): allow NULL char *
	(BK_NULLSTR): string placeholder for NULL

	* lib/b_bits.c (bk_bits_save): decrement size by 8 bits per char
	(bk_bits_restore): size (in bits) is 4*strlen(x)

	* lib/b_string.c (bk_string_tokenize_split): avoid segv for default ws
	(bk_string_quote): generate NULL for NULL, if ok

2001-09-25  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk_include.h: include winsock.h, process.h, instead
	of various unix-specific include files

	* include/libbk_oscompat.h: typedefs and #defines to work with mingw

	* lib/b_general.c (bk_general_init): no openlog() call on windows
	(bk_general_vsyslog): no syslog() calls on windows

	* test/test_stringconv.c: avoid name/type clashes with int32/uint32

2001-09-18  Alexander Dupuy  <dupuy@sysdetect.com>

	* lib/b_config.c (bk_config_init): failure of load_config_from_file
	is non-fatal, and does not cause destruction of bk_config struct

2001-09-17  Alexander Dupuy  <dupuy@sysdetect.com>

	* include/libbk.h (BK_GENERAL_FLAGS): avoid Linux gcc warnings
	about signed vs. unsigned

	* lib/b_general.c: avoid Linux gcc warnings about signed vs. unsigned

2001-09-11  Seth Robertson  <seth@yeah.baka.org>

	* include/libbk_oscompat.h: Move NULL/MAX/MIN issues to oscompat.

2001-09-11    <dupuy@cs.columbia.edu>

	* lib/b_debug.c (bk_debug_iprint): avoid Unix dependency here too

	also cleanup unneeded /**/ for string concatenation

2001-09-10  Alexander Dupuy  <dupuy@cs.columbia.edu>

	* lib/b_error.c (be_error_output): avoid infinite recursion, Unix
	dependency

2001-09-10  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_fun.c (bk_fun_exit): Previous change leaked memory.
	Now properly handling !B.

	* include/libbk.h: BK_RETURN no longer coredump on !B

2001-09-08  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_bits.c: Bit operations created

2001-09-04  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_cksum.c (b_in_cksum): Add in_cksum from Net4BSD

2001-09-03  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_string.c: Create 64 bit version of atou and atoi.
	(bk_string_atoflag/bk_string_flagtoa): Hide flags representation
	for ascii conversion.
	(bk_string_quote): Function to quote strings for output.

2001-08-31  Seth Robertson  <seth@yeah.baka.org>

	* src/proto.c: Full prototype "Hello World".  Will need more work
	(or a different version!) once additional functionality becomes
	ready.

	* lib/b_error.c (bk_error_idump): Get working, reverse order.
	(be_error_output): Enable time output.
	(bk_error_iprint): output errors during runtime only if hi priority

2001-08-30  Seth Robertson  <seth@yeah.baka.org>

	* test/test_stringconv.c: Test program now operational.  atoish
	functions tested.  Hash function tested.  String tokenization
	tested.  Debugging tested.  Config tested.

	* lib/b_config.c (config_manage): Make work
	(load_config_from_file): Fgets is the correct function...
	(bck_create): DLL must be unordered if no cmp funs

	* lib/b_stdfun.c: Create standard helper functions

	* include/libbk.h (BK_ENV_GWD): Fix definition

	* lib/b_general.c (bk_general_debug_config): Single function to
	configure debugging.

	* lib/b_fun.c (bk_fun_reset_debug): New function to reset debug
	levels of all entered functions.

2001-08-29  Seth Robertson  <seth@yeah.baka.org>

	* test/test_stringconv.c: Fill out string test program.

	* lib/b_string.c (bk_string_rip): Add rip to terminate strings on bad chars

2001-08-26  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_string.c (bk_string_printbuf): Fix binary output function.

	* include/libbk.h: BK_GENERAL_* macros to check for B allocation
	before dereference.

	* lib/b_string.c (bk_string_tokenize_split): Finished tokenization code.

	* lib/b_memx.c: Dynamic array extension code

2001-08-19  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_string.c: Filling out string functions

	* lib/b_error.c (be_error_output): Convert to using bk_general_syslog

	* lib/b_debug.c (bk_debug_iprint): Convert to using bk_general_syslog

	* lib/*.c: CLC #defines had _uniq screwed up
	
	* lib/b_funlist.c: Fill out funlist functions

	* lib/b_general.c: New funlist APIs.

2001-08-16  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_fun.c (bk_fun_destroy): Convert to DICT_NUKE_CONTENTS
	* lib/b_debug.c (bk_debug_destroy): Convert to DICT_NUKE_CONTENTS
	
	* lib/b_error.c: Write error functions

	* lib/b_debug.c: error functions will have incorrect function name
	listed.

	* lib/b_config.c (kv_key_hash): Switch to new strhash API.

	* lib/b_debug.c: Fill out debug function.

	* lib/b_string.c (bk_strhash): This is code trans-scribed
	*directly* from K&P, modula the NOMODULUS flag I just put in.

2001-07-15  James Tanis  <jtt@outpost.tanis.org>

	* lib/b_config.c (bck_create): Main maintence function.

2001-07-13  James Tanis  <jtt@outpost.tanis.org>

	* lib/b_config.c: More config stuff.
	(bc_config_delete_key): Even More config stuff

2001-07-09  James Tanis  <jtt@outpost.tanis.org>

	* lib/b_general.c (bk_general_destroy): redo config stuff for new
	interface.

	* lib/b_fun.c (funstack_error_reason): properly protect macro args.

	* lib/b_config.c: first codelets for config stuff.

2001-07-04  Seth Robertson  <seth@yeah.baka.org>

	* lib/b_general.c: Completed and compiling!
